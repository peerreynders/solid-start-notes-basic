// file: note-list-content.tsx
import { For, Show } from 'solid-js';
import { NoHydration } from 'solid-js/web';
import type { NoteBrief } from '../server/types';

const TARGET_CLASS = 'js:c-brief-content';

type Props = {
	search: string | undefined;
	briefs: NoteBrief[];
};

const notFoundContent = (search: string | undefined) =>
	search
		? `Couldn't find any notes titled "${search}"`
		: 'No notes created yet!';

const EmptyContent = (props: { search: string | undefined }) => (
	<div class={TARGET_CLASS + ' c-brief-empty'}>
		{notFoundContent(props.search)}{' '}
	</div>
);

// BriefListContent
function NoteListContent(props: Props) {
	return (
		<NoHydration>
			<Show
				when={props.briefs.length > 0}
				fallback={EmptyContent({ search: props.search })}
			>
				<ul class={TARGET_CLASS + ' c-brief-list'}>
					<For each={props.briefs}>
						{(brief: NoteBrief) => (
							<li>
								<div class="c-note-preview" data-id={brief.id}>
									<header>
										<strong>{brief.title}</strong>
										<time datetime={brief.updatedISO}>{brief.updatedAt}</time>
										<button>Open note for preview</button>
										<button>
											<img src="chevron-up.svg" alt="Expand" />
											<img src="chevron-down.svg" alt="Collapse" />
										</button>
										<p>
											<Show when={brief.summary} fallback={<i>(No Content)</i>}>
												{brief.summary}
											</Show>
										</p>
									</header>
								</div>
							</li>
						)}
					</For>
				</ul>
			</Show>
		</NoHydration>
	);
}

export { TARGET_CLASS, NoteListContent };
